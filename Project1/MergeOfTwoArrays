#include <iostream>
using namespace std;

int main()
{
    int columns, rows;
    cout << "Input array rows and columns: ";
    cin >> rows >> columns;
    rows--; columns--;

    int **Array1 = new int* [rows]; //allocating memory for array1
    for (int arr_counter = 0; arr_counter <= rows; arr_counter++)
        Array1[arr_counter] = new int [columns];

    int **Array2 = new int* [rows]; //allocating memory for array2
    for (int arr_counter = 0; arr_counter <= rows; arr_counter++)
        Array2[arr_counter] = new int [columns];

    int **Array3 = new int* [rows]; //allocating memory for array3
    for (int arr_counter = 0; arr_counter <= rows; arr_counter++)
        Array3[arr_counter] = new int [columns * 2];

    cout << "Input array1 elements: ";
    for (int count_row = 0; count_row <= rows; count_row++) //filling an array1
        for (int count_col = 0; count_col <= columns; count_col++)
            cin >> Array1[count_row][count_col];

    cout << "Input array2 elements: ";
    for (int count_row = 0; count_row <= rows; count_row++) //filling an array2
        for (int count_col = 0; count_col <= columns; count_col++)
            cin >> Array2[count_row][count_col];

    for (int count_row = 0; count_row <= rows; count_row++) //merge algorythm
    {
        for (int count_col = 0; count_col <= columns * 2; count_col++)
        {
           Array3[count_row][2 * count_col] = Array1[count_row][count_col];
           Array3[count_row][(2 * count_col) + 1] = Array2[count_row][count_col];
        }
    }

    cout << "Array3: " << endl;
    for (int count_row = 0; count_row <= rows; count_row++) //output
    {
        for (int count_col = 0; count_col <= columns * 2 + 1; count_col++)
        {
           cout << Array3[count_row][count_col] << ' ';
        }
        cout << endl;
    }

    for (int count_row = 0; count_row <= rows; count_row++)
            delete [] Array1[count_row];
    for (int count_row = 0; count_row <= rows; count_row++)
            delete [] Array2[count_row];
    for (int count_row = 0; count_row*2 <= rows; count_row++)
            delete [] Array3[count_row];

    return 0;
}
